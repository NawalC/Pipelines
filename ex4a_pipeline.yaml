trigger: none

variables:
- group: terraform-aws-config

pool:
    vmImage: 'ubuntu-latest'

# Define steps     
steps:


# Install Terraform
- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
  displayName: install terraform
  inputs:
    terraformVersion: latest

# Terraform init
- task: TerraformCLI@0
  displayName: 'Terraform Init'
  inputs:
    inputs:
    command: 'init'
    backendType: 'aws'
    allowTelemetryCollection: true
    backendAwsRegion: $(backendAwsRegion)
    backendAwsBucket: $(backendAWSBucketName)
    backendAwsKey: $(backendAWSKey)
    backendServiceAWS : $(backendServiceAWS)
    workingDirectory: '$(System.DefaultWorkingDirectory)/session5/'
  

# Terraform Validate
- task: TerraformCLI@0
  displayName: 'Terraform Validate'
  inputs:
    provider: 'aws'
    command: 'validate'
    workingDirectory: '$(System.DefaultWorkingDirectory)/session5/'
    environmentServiceNameAWS: $(backendServiceAWS)

# Create artifact directory
- bash: |
      mkdir -p $(Pipeline.Workspace)/Output
  name: 'Directory'
  displayName: 'Create artifact directory'

# Terraform Plan
- task: TerraformCLI@0
  displayName: 'Terraform Plan'
  inputs:
    provider: 'aws'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/session5/'
    environmentServiceNameAWS: $(backendServiceAWS)
    publishPlanResults: 'terraform.tfplan'
    commandOptions: '-out=$(Pipeline.Workspace)/Output/terraform.tfplan'
    
    
# Publish Terraform Plan artifact
- task: PublishPipelineArtifact@1
  displayName: 'Publish plan artifact'
  inputs:
    targetPath: '$(Pipeline.Workspace)/Output'
    artifact: 'Evaluate'
    publishLocation: 'pipeline'
    
# Apply Terraform Plan
- task: TerraformCLI@0
  displayName: 'Terraform Apply'
  inputs:
    provider: 'aws'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/session5/'
    commandOptions:  '$(Pipeline.Workspace)/Output/terraform.tfplan'
    environmentServiceNameAWS: $(backendServiceAWS)     